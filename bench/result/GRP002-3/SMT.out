File "./GRP002-3/SMT.v", line 6, characters 0-15:
Warning: Interpreting this declaration as if a global declaration prefixed by
"Local", i.e. as a global declaration which shall not be available without
qualification when imported. [local-declaration,vernacular,default]
File "./GRP002-3/SMT.v", line 7, characters 0-15:
Warning: Interpreting this declaration as if a global declaration prefixed by
"Local", i.e. as a global declaration which shall not be available without
qualification when imported. [local-declaration,vernacular,default]
File "./GRP002-3/SMT.v", line 8, characters 0-34:
Warning: Interpreting this declaration as if a global declaration prefixed by
"Local", i.e. as a global declaration which shall not be available without
qualification when imported. [local-declaration,vernacular,default]
File "./GRP002-3/SMT.v", line 9, characters 0-22:
Warning: Interpreting this declaration as if a global declaration prefixed by
"Local", i.e. as a global declaration which shall not be available without
qualification when imported. [local-declaration,vernacular,default]
File "./GRP002-3/SMT.v", line 10, characters 0-26:
Warning: Interpreting this declaration as if a global declaration prefixed by
"Local", i.e. as a global declaration which shall not be available without
qualification when imported. [local-declaration,vernacular,default]
File "./GRP002-3/SMT.v", line 11, characters 0-32:
Warning: Interpreting this declaration as if a global declaration prefixed by
"Local", i.e. as a global declaration which shall not be available without
qualification when imported. [local-declaration,vernacular,default]
File "./GRP002-3/SMT.v", line 23, characters 2-6:
Warning: Discarding the following lemma (unsupported):
(forall X : Z, multiply X (multiply X X) = identity)
[SMTCoq-discarding-lemma,SMTCoq,default]
File "./GRP002-3/SMT.v", line 23, characters 2-6:
Warning: Discarding the following lemma (unsupported):
(forall X Y : Z,
 commutator X Y = multiply X (multiply Y (multiply (inverse X) (inverse Y))))
[SMTCoq-discarding-lemma,SMTCoq,default]
File "./GRP002-3/SMT.v", line 23, characters 2-6:
Warning: Discarding the following lemma (unsupported):
(forall X Y Z0 : Z, multiply (multiply X Y) Z0 = multiply X (multiply Y Z0))
[SMTCoq-discarding-lemma,SMTCoq,default]
File "./GRP002-3/SMT.v", line 23, characters 2-6:
Warning: Discarding the following lemma (unsupported):
(forall X : Z, multiply (inverse X) X = identity)
[SMTCoq-discarding-lemma,SMTCoq,default]
File "./GRP002-3/SMT.v", line 23, characters 2-6:
Warning: Discarding the following lemma (unsupported):
(forall X : Z, multiply identity X = X)
[SMTCoq-discarding-lemma,SMTCoq,default]
veriT --proof-prune --proof-merge --proof-with-sharing --cnf-definitional --disable-ackermann --input=smtlib2 --proof=/tmp/verit_coq82a368.vtlog /tmp/verit_coq82a368.smt2 2> /tmp/warnings_verit15d0be.log
veriT dev - the SMT-solver veriT (UFRN/LORIA).
success
success
success
success
success
success
unknown
success
success
Verit = 0.00008
(set-option :print-success true)
(set-option :produce-assignments true)
(set-option :produce-proofs true)
(set-logic QF_UFLIA)
(declare-fun op_0 () Int)
(declare-fun op_3 () Int)
(declare-fun op_1 () Int)
(declare-fun op_2 (Int Int ) Int)
(assert (not (= (op_2 (op_2 op_0 op_1) op_1) op_3)))
(check-sat)
(get-model)
File "./GRP002-3/SMT.v", line 23, characters 2-5:
Error:
CVC4 returned sat. Here is the model:

a := 0
b := -1
commutator := fun BOUND_VARIABLE_292 BOUND_VARIABLE_293 => if BOUND_VARIABLE_292 = 0 then if BOUND_VARIABLE_293 = -1 then 2 else -2 else -2
identity := 1

