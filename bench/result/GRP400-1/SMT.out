File "./GRP400-1/SMT.v", line 6, characters 0-15:
Warning: Interpreting this declaration as if a global declaration prefixed by
"Local", i.e. as a global declaration which shall not be available without
qualification when imported. [local-declaration,vernacular,default]
File "./GRP400-1/SMT.v", line 7, characters 0-15:
Warning: Interpreting this declaration as if a global declaration prefixed by
"Local", i.e. as a global declaration which shall not be available without
qualification when imported. [local-declaration,vernacular,default]
File "./GRP400-1/SMT.v", line 8, characters 0-15:
Warning: Interpreting this declaration as if a global declaration prefixed by
"Local", i.e. as a global declaration which shall not be available without
qualification when imported. [local-declaration,vernacular,default]
File "./GRP400-1/SMT.v", line 9, characters 0-34:
Warning: Interpreting this declaration as if a global declaration prefixed by
"Local", i.e. as a global declaration which shall not be available without
qualification when imported. [local-declaration,vernacular,default]
File "./GRP400-1/SMT.v", line 10, characters 0-32:
Warning: Interpreting this declaration as if a global declaration prefixed by
"Local", i.e. as a global declaration which shall not be available without
qualification when imported. [local-declaration,vernacular,default]
veriT --proof-prune --proof-merge --proof-with-sharing --cnf-definitional --disable-ackermann --input=smtlib2 --proof=/tmp/verit_coqfc8b32.vtlog /tmp/verit_coqfc8b32.smt2 2> /tmp/warnings_verit99b7b5.log
veriT dev - the SMT-solver veriT (UFRN/LORIA).
success
success
success
success
success
success
success
success
success
success
success
success
unknown
success
success
Verit = 0.00007
(set-option :print-success true)
(set-option :produce-assignments true)
(set-option :produce-proofs true)
(set-logic QF_UFLIA)
(declare-fun op_3 () Int)
(declare-fun op_0 () Int)
(declare-fun op_1 () Int)
(declare-fun op_2 (Int Int ) Int)
(declare-fun op_4 (Int Int ) Int)
(assert (not (= (op_4 (op_2 op_0 op_1) op_3) (op_2 (op_4 op_0 op_3) (op_4 op_1 op_3)))))
(check-sat)
(get-model)
File "./GRP400-1/SMT.v", line 22, characters 2-5:
Error:
CVC4 returned sat. Here is the model:

a := 1
b := -1
multiply := fun BOUND_VARIABLE_319 BOUND_VARIABLE_320 => if BOUND_VARIABLE_319 = 1 then if BOUND_VARIABLE_320 = -1 then 2 else 4 else 4
c := 0
commutator := fun BOUND_VARIABLE_319 BOUND_VARIABLE_320 => if BOUND_VARIABLE_319 = 2 then if BOUND_VARIABLE_320 = 0 then -2 else -3 else if BOUND_VARIABLE_319 = 1 then if BOUND_VARIABLE_320 = 0 then 3 else -3 else -3

