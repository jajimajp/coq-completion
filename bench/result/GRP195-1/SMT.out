File "./GRP195-1/SMT.v", line 6, characters 0-15:
Warning: Interpreting this declaration as if a global declaration prefixed by
"Local", i.e. as a global declaration which shall not be available without
qualification when imported. [local-declaration,vernacular,default]
File "./GRP195-1/SMT.v", line 7, characters 0-15:
Warning: Interpreting this declaration as if a global declaration prefixed by
"Local", i.e. as a global declaration which shall not be available without
qualification when imported. [local-declaration,vernacular,default]
File "./GRP195-1/SMT.v", line 8, characters 0-32:
Warning: Interpreting this declaration as if a global declaration prefixed by
"Local", i.e. as a global declaration which shall not be available without
qualification when imported. [local-declaration,vernacular,default]
File "./GRP195-1/SMT.v", line 17, characters 2-6:
Warning: Discarding the following lemma (unsupported):
(forall X Y : Z, multiply X (multiply Y Y) = multiply Y (multiply Y X))
[SMTCoq-discarding-lemma,SMTCoq,default]
File "./GRP195-1/SMT.v", line 17, characters 2-6:
Warning: Discarding the following lemma (unsupported):
(forall X Y Z0 : Z, multiply (multiply X Y) Z0 = multiply X (multiply Y Z0))
[SMTCoq-discarding-lemma,SMTCoq,default]
veriT --proof-prune --proof-merge --proof-with-sharing --cnf-definitional --disable-ackermann --input=smtlib2 --proof=/tmp/verit_coq71c4a7.vtlog /tmp/verit_coq71c4a7.smt2 2> /tmp/warnings_verit3eef72.log
veriT dev - the SMT-solver veriT (UFRN/LORIA).
success
success
success
success
success
unknown
success
success
Verit = 0.00007
(set-option :print-success true)
(set-option :produce-assignments true)
(set-option :produce-proofs true)
(set-logic QF_UFLIA)
(declare-fun op_0 () Int)
(declare-fun op_1 () Int)
(declare-fun op_2 (Int Int ) Int)
(assert (not (= (op_2 op_0 (op_2 op_1 (op_2 op_0 (op_2 op_1 (op_2 op_0 (op_2 op_1 (op_2 op_0 op_1))))))) (op_2 op_0 (op_2 op_0 (op_2 op_0 (op_2 op_0 (op_2 op_1 (op_2 op_1 (op_2 op_1 op_1))))))))))
(check-sat)
(get-model)
File "./GRP195-1/SMT.v", line 17, characters 2-5:
Error:
CVC4 returned sat. Here is the model:

a := 0
b := 1
multiply := fun BOUND_VARIABLE_387 BOUND_VARIABLE_388 => if BOUND_VARIABLE_387 = 1 then if BOUND_VARIABLE_388 = -5 then 6 else if BOUND_VARIABLE_388 = 5 then -5 else if BOUND_VARIABLE_388 = -3 then 4 else if BOUND_VARIABLE_388 = -2 then 3 else if BOUND_VARIABLE_388 = -1 then 2 else if BOUND_VARIABLE_388 = 1 then 5 else 8 else if BOUND_VARIABLE_387 = 0 then if BOUND_VARIABLE_388 = 7 then -7 else if BOUND_VARIABLE_388 = -6 then 7 else if BOUND_VARIABLE_388 = 6 then -6 else if BOUND_VARIABLE_388 = 4 then -4 else if BOUND_VARIABLE_388 = 3 then -3 else if BOUND_VARIABLE_388 = 2 then -2 else if BOUND_VARIABLE_388 = 1 then -1 else 8 else 8

