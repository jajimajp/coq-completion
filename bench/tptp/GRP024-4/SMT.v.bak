(* Generated by tptp2coqp *)
Require Import SMTCoq.SMTCoq ZArith.
Local Open Scope Z_scope.

(* axioms *)
Variable a : G.
Variable b : G.
Variable c : G.
Variable commutator : G -> G -> G.
Variable e : G.
Variable f : G.
Variable g : G.
Variable multiply : G -> G -> G.
Axiom commutator : forall X Y : G, (commutator X Y) = (multiply X (multiply Y (multiply (inverse X) (inverse Y)))).
Axiom right_inverse : forall X : G, (multiply X (inverse X)) = identity.
Axiom right_identity : forall X : G, (multiply X identity) = X.
Axiom associativity : forall X Y Z : G, (multiply (multiply X Y) Z) = (multiply X (multiply Y Z)).
Axiom left_inverse : forall X : G, (multiply (inverse X) X) = identity.
Axiom left_identity : forall X : G, (multiply identity X) = X.

Add_lemmas commutator right_inverse right_identity associativity left_inverse left_identity.

(* Goal *)
Theorem check : (commutator (commutator a b) c) = (commutator a (commutator b c)).
Proof.
  smt.
Qed.

Check check.

