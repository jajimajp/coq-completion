(* Generated by tptp2coqp *)
Require Import Setoid.
From Completion Require Import Plugin.

(* axioms *)
Parameter G : Set.
Parameter a : G.
Parameter one : G.
Parameter s : G -> G.
Parameter sum : G -> G.
Parameter times : G -> G -> G.
Parameter zero : G.
Axiom induction_hypothesis : forall '+' : G, ('+' (sum a) (sum a)) = (times a (s a)).
Axiom sum_s : forall '+' N : G, (sum (s N)) = ('+' (s N) (sum N)).
Axiom sum_zero : (sum zero) = zero.
Axiom times_s : forall '+' X Y : G, (times (s X) Y) = ('+' Y (times X Y)).
Axiom plus_s : forall '+' X Y : G, ('+' (s X) Y) = (s ('+' X Y)).
Axiom distr_001 : forall '+' X Y Z : G, (times ('+' X Y) Z) = ('+' (times X Z) (times Y Z)).
Axiom distr : forall '+' X Y Z : G, (times X ('+' Y Z)) = ('+' (times X Y) (times X Z)).
Axiom times_one : forall X : G, (times X one) = X.
Axiom times_zero : forall X : G, (times X zero) = zero.
Axiom plus_zero : forall '+' X : G, ('+' X zero) = X.
Axiom times_assoc : forall X Y Z : G, (times X (times Y Z)) = (times (times X Y) Z).
Axiom times_comm : forall X Y : G, (times X Y) = (times Y X).
Axiom plus_assoc : forall '+' X Y Z : G, ('+' X ('+' Y Z)) = ('+' ('+' X Y) Z).
Axiom plus_comm : forall '+' X Y : G, ('+' X Y) = ('+' Y X).

Complete induction_hypothesis sum_s sum_zero times_s plus_s distr_001 distr times_one times_zero plus_zero times_assoc times_comm plus_assoc plus_comm : a one s sum times zero : hint
  for (forall '+' : G, ('+' (sum (s a)) (sum (s a))) = (times (s a) (s (s a)))).

(* Goal *)
Theorem check : forall '+' : G, ('+' (sum (s a)) (sum (s a))) = (times (s a) (s (s a))).
Proof.
  lpo_autorewrite with hint.
  reflexivity.
Qed.

Check check.

