(* Generated by tptp2coqp *)
Require Import Setoid.
From Completion Require Import Plugin.

(* axioms *)
Parameter G : Set.
Axiom sos_08 : forall ' = =>' '+' A B : G, ('+' A (' = =>' A B)) = ('+' B (' = =>' B A)).
Axiom sos_07 : forall ' = =>' '+' A B C : G, (' = =>' ('+' A B) C) = (' = =>' A (' = =>' B C)).
Axiom sos_06 : forall ' = =>' '0' A : G, (' = =>' '0' A) = A.
Axiom sos_05 : forall ' = =>' '0' A : G, (' = =>' A '0') = '0'.
Axiom sos_04 : forall ' = =>' '0' A : G, (' = =>' A A) = '0'.
Axiom sos_03 : forall '+' '0' A : G, ('+' A '0') = A.
Axiom sos_02 : forall '+' A B : G, ('+' A B) = ('+' B A).
Axiom sos_01 : forall '+' A B C : G, ('+' ('+' A B) C) = ('+' A ('+' B C)).

Complete sos_08 sos_07 sos_06 sos_05 sos_04 sos_03 sos_02 sos_01 :  : hint
  for (forall ' = =>' '+' : G, ('+' ('+' a (' = =>' a b)) (' = =>' ('+' a (' = =>' a b)) c)) = ('+' a (' = =>' a ('+' b (' = =>' b c))))).

(* Goal *)
Theorem check : forall ' = =>' '+' : G, ('+' ('+' a (' = =>' a b)) (' = =>' ('+' a (' = =>' a b)) c)) = ('+' a (' = =>' a ('+' b (' = =>' b c)))).
Proof.
  autorewrite with hint.
  reflexivity.
Qed.

Check check.

