(* Generated by tptp2coqp *)
Require Import Setoid.
From Completion Require Import Plugin.

(* axioms *)
Parameter G : Set.
Parameter and : G -> G -> G.
Parameter axiom : G -> G.
Parameter equivalent : G -> G -> G.
Parameter ifeq : G -> G -> G -> G -> G.
Parameter implies : G -> G -> G.
Parameter not : G -> G.
Parameter or : G -> G -> G.
Parameter theorem : G -> G.
Parameter true : G.
Axiom equivalent_defn : forall P Q : G, (equivalent P Q) = (and (implies P Q) (implies Q P)).
Axiom and_defn : forall P Q : G, (and P Q) = (not (or (not P) (not Q))).
Axiom rule_2 : forall X Y : G, (ifeq (theorem (implies Y X)) true (ifeq (theorem Y) true (theorem X) true) true) = true.
Axiom rule_1 : forall X : G, (ifeq (axiom X) true (theorem X) true) = true.
Axiom implies_definition : forall X Y : G, (implies X Y) = (or (not X) Y).
Axiom axiom_1_6 : forall A B C : G, (axiom (implies (implies A B) (implies (or C A) (or C B)))) = true.
Axiom axiom_1_5 : forall A B C : G, (axiom (implies (or A (or B C)) (or B (or A C)))) = true.
Axiom axiom_1_4 : forall A B : G, (axiom (implies (or A B) (or B A))) = true.
Axiom axiom_1_3 : forall A B : G, (axiom (implies A (or B A))) = true.
Axiom axiom_1_2 : forall A : G, (axiom (implies (or A A) A)) = true.
Axiom ifeq_axiom : forall A B C : G, (ifeq A A B C) = B.

Complete equivalent_defn and_defn rule_2 rule_1 implies_definition axiom_1_6 axiom_1_5 axiom_1_4 axiom_1_3 axiom_1_2 ifeq_axiom : and axiom equivalent ifeq implies not or theorem true : hint
  for ((theorem (equivalent (and (not p) (not q)) (or p q))) = true).

(* Goal *)
Theorem check : (theorem (equivalent (and (not p) (not q)) (or p q))) = true.
Proof.
  lpo_autorewrite with hint.
  reflexivity.
Qed.

Check check.

