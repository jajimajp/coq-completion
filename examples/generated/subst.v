(*
This example was automatically generated by converting from
subst.trs: 

(VAR x y z)
(RULES
a(cur(x),y) -> cur(a(x, p(one,a(y,up))))
a(p(x,y), z) -> p(a(x,z),a(y, z))
a(a(x, y), z) -> a(x, a(y, z))
a(i, x) -> x
a(one, i) -> one
a(up, i) -> up
a(one, p(x, y)) -> x
a(up, p(x, y)) -> y
)
(COMMENT
See TeReSe 6.5.42.
GWPO proofs require mix interpretation (max and polyonominals)?
)

*)

Require Import Coq.Setoids.Setoid.
From Completion Require Import Plugin.

Parameter G : Set.
    
Parameter a : G -> G -> G.
Parameter cur : G -> G.
Parameter i : G.
Parameter one : G.
Parameter p : G -> G -> G.
Parameter up : G.
Axiom ax0 : forall x y, a up (p x y) = y.
Axiom ax1 : forall x y, a one (p x y) = x.
Axiom ax2 : a up i = up.
Axiom ax3 : a one i = one.
Axiom ax4 : forall x, a i x = x.
Axiom ax5 : forall x y z, a (a x y) z = a x (a y z).
Axiom ax6 : forall x y z, a (p x y) z = p (a x z) (a y z).
Axiom ax7 : forall x y, a (cur x) y = cur (a x (p one (a y up))).
Create HintDb hint_compl.
Complete ax0 ax1 ax2 ax3 ax4 ax5 ax6 ax7 : a cur i one p up : hint_compl.
Print Rewrite HintDb hint_compl.
