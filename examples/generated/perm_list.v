(*
This example was automatically generated by converting from
perm_list.trs: 

(VAR n x y)
(RULES
app(nil, y) -> y
app(add(n, x), y) -> add(n, app(x, y))
reverse(nil) -> nil
reverse(add(n,x)) -> app(reverse(x), add(n, nil))
shuffle(nil) -> nil
shuffle(add(n,x)) -> add(n, shuffle(reverse(x)))
)
(COMMENT
AG01 Example 3.12
)

*)

Require Import Coq.Setoids.Setoid.
From Completion Require Import Plugin.

Parameter G : Set.
    
Parameter add : G -> G -> G.
Parameter app : G -> G -> G.
Parameter nil : G.
Parameter reverse : G -> G.
Parameter shuffle : G -> G.
Axiom ax0 : forall n x, shuffle (add n x) = add n (shuffle (reverse x)).
Axiom ax1 : shuffle nil = nil.
Axiom ax2 : forall n x, reverse (add n x) = app (reverse x) (add n nil).
Axiom ax3 : reverse nil = nil.
Axiom ax4 : forall n x y, app (add n x) y = add n (app x y).
Axiom ax5 : forall y, app nil y = y.
Create HintDb hint_compl.
Complete ax0 ax1 ax2 ax3 ax4 ax5 : add app nil reverse shuffle : hint_compl.
Print Rewrite HintDb hint_compl.
